"use strict";(self.webpackChunkneumorphism_ui=self.webpackChunkneumorphism_ui||[]).push([[217],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(n),d=o,h=c["".concat(l,".").concat(d)]||c[d]||m[d]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9250:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return m}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],p={title:"Installation",sidebar_position:1},l=void 0,s={unversionedId:"installation",id:"installation",title:"Installation",description:"Neumorphism UI is supported in React Native CLI initiated apps. For Expo projects is coming soon.",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/neumorphism-ui/docs/installation",editUrl:"https://github.com/awaitstack/neumorphism-ui/blob/master/docs/installation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Installation",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Button",permalink:"/neumorphism-ui/docs/components/Button"}},u={},m=[{value:"Getting Started",id:"getting-started",level:2},{value:"What you&#39;ll need",id:"what-youll-need",level:3},{value:"Usage",id:"usage",level:2},{value:"Customization",id:"customization",level:2}],c={toc:m};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Neumorphism UI")," is supported in React Native CLI initiated apps. For Expo projects is coming soon."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Open a Terminal in your project's folder and run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install neumorphism-ui\n")),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn install neumorphism-ui\n")),(0,a.kt)("h3",{id:"what-youll-need"},"What you'll need"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Nodejs")," version 14 or above:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"When installing Node.js, you are recommended to check all checkboxes related to dependencies."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://yarnpkg.com/getting-started/install"},"Yarn")," latest version:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"When installing Yarn, you are recommended to check all checkboxes related to dependencies.")))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Wrap your root component in ",(0,a.kt)("strong",{parentName:"p"},"NeumorphismProvider")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"neumorphism-ui"),". If you have a vanilla React Native project, it's a good idea to add it in the component which is passed to ",(0,a.kt)("inlineCode",{parentName:"p"},"AppRegistry.registerComponent"),". This will usually be in the ",(0,a.kt)("inlineCode",{parentName:"p"},"index.js")," file like the example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import * as React from 'react';\nimport {AppRegistry} from 'react-native';\nimport {NeumorphismProvider} from 'neumorphism-ui';\nimport {name as appName} from './app.json';\nimport App from './src/App';\n\nAppRegistry.registerComponent(appName, () => (\n  <NeumorphismProvider>\n    <App />\n  </NeumorphismProvider>\n));\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"NeumorphismProvider")," component provides the theme to all the components in the framework."),(0,a.kt)("h2",{id:"customization"},"Customization"),(0,a.kt)("p",null,"You can provide a custom theme to customize the colors. with the ",(0,a.kt)("inlineCode",{parentName:"p"},"NeumorphismProvider")," component. Check the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/awaitstack/neumorphism-ui/blob/main/src/styles/DefaultTheme.tsx"},"default theme")," to see what customization options are supported."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import * as React from 'react';\nimport { DefaultTheme, NeumorphismProvider } from 'neumorphism-ui';\nimport App from './src/App';\n\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: 'red',\n    accent: 'yellow',\n    text: 'black',\n  },\n};\n\nexport default function Main() {\n  const {colors} = theme\n  return (\n    <NeumorphismProvider \n    textColor={colors.text} \n    backgroundColor={colors.primary} \n    theme={theme}>\n      <App />\n    </NeumorphismProvider>\n  );\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"backgroundColor")," is used to set the background color of the whole app based on the neumorphism principle. User can change the background color if they want."))}d.isMDXComponent=!0}}]);