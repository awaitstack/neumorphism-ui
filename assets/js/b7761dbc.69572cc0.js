"use strict";(self.webpackChunkneumorphism_ui=self.webpackChunkneumorphism_ui||[]).push([[640],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),p=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(u,".").concat(d)]||m[d]||c[d]||i;return n?o.createElement(f,a(a({ref:t},s),{},{components:n})):o.createElement(f,a({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2107:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],l={title:"Contributing"},u=void 0,p={type:"mdx",permalink:"/neumorphism-ui/contributing",source:"@site/src/pages/contributing.md",title:"Contributing",description:"Code of Conduct",frontMatter:{title:"Contributing"}},s=[{value:"Code of Conduct",id:"code-of-conduct",level:2},{value:"Our Development Process",id:"our-development-process",level:2},{value:"Development workflow",id:"development-workflow",level:3},{value:"Commit message convention",id:"commit-message-convention",level:3},{value:"Linting and tests",id:"linting-and-tests",level:3},{value:"Sending a pull request",id:"sending-a-pull-request",level:3},{value:"Working on documentation",id:"working-on-documentation",level:3},{value:"Reporting issues",id:"reporting-issues",level:2},{value:"License",id:"license",level:2}],c={toc:s};function m(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"code-of-conduct"},"Code of Conduct"),(0,i.kt)("p",null,"We want this community to be friendly and respectful to each other. Please read ",(0,i.kt)("a",{parentName:"p",href:"./CODE_OF_CONDUCT"},"the full text")," so that you can understand what actions will and will not be tolerated."),(0,i.kt)("h2",{id:"our-development-process"},"Our Development Process"),(0,i.kt)("p",null,"The core team works directly on GitHub and all work is public."),(0,i.kt)("h3",{id:"development-workflow"},"Development workflow"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Working on your first pull request?")," You can learn how from this ",(0,i.kt)("em",{parentName:"p"},"tutorial")," : ",(0,i.kt)("a",{parentName:"p",href:"https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github"},"How to Contribute to an Open Source Project on GitHub"),".")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Fork the repo and create your branch from ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," (a guide on ",(0,i.kt)("a",{parentName:"li",href:"https://help.github.com/articles/fork-a-repo/"},"how to fork a repository"),")."),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"npm install")," to setup the development environment."),(0,i.kt)("li",{parentName:"ol"},"Do the changes you want and test them before sending a pull request.")),(0,i.kt)("h3",{id:"commit-message-convention"},"Commit message convention"),(0,i.kt)("p",null,"We follow the ",(0,i.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en"},"conventional commits specification")," for our commit messages:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fix"),": bug fixes, e.g. fix Button color on DarkTheme."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"feat"),": new features, e.g. add Snackbar component."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"refactor"),": code refactor, e.g. new folder structure for components."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"docs"),": changes into documentation, e.g. add usage example for Button."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test"),": adding or updating tests, eg unit, snapshot testing.")),(0,i.kt)("h3",{id:"linting-and-tests"},"Linting and tests"),(0,i.kt)("p",null,"We use ",(0,i.kt)("inlineCode",{parentName:"p"},"eslint")," for lint the code,  ",(0,i.kt)("inlineCode",{parentName:"p"},"prettier")," for formatting the code, and ",(0,i.kt)("inlineCode",{parentName:"p"},"jest")," for testing. You can also run the following commands manually:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"npm lint"),": format files with ",(0,i.kt)("inlineCode",{parentName:"li"},"prettier"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"npm test"),": run unit tests with ",(0,i.kt)("inlineCode",{parentName:"li"},"jest"),".")),(0,i.kt)("h3",{id:"sending-a-pull-request"},"Sending a pull request"),(0,i.kt)("p",null,"When you're sending a pull request:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Prefer small pull requests focused on one change."),(0,i.kt)("li",{parentName:"ul"},"Preview the documentation to make sure it looks good."),(0,i.kt)("li",{parentName:"ul"},"Follow the pull request template when opening a pull request.")),(0,i.kt)("p",null,"When you're working on a component:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Follow the guidelines described in the ",(0,i.kt)("a",{parentName:"li",href:"https://www.justinmind.com/blog/neumorphism-ui/"},"Neumorphism UI Design"),"."),(0,i.kt)("li",{parentName:"ul"},"Write a brief description of every prop when defining ",(0,i.kt)("inlineCode",{parentName:"li"},"type Props")," to aid with documentation."),(0,i.kt)("li",{parentName:"ul"},"Provide an example usage for the component (check other components to get a idea)."),(0,i.kt)("li",{parentName:"ul"},"Update the type definitions for Flow if you changed an API or added a component.")),(0,i.kt)("h3",{id:"working-on-documentation"},"Working on documentation"),(0,i.kt)("p",null,"The documentation is automatically generated from the ",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/"},"Docusaurus"),". To preview the generated documentation, run ",(0,i.kt)("inlineCode",{parentName:"p"},"npm start")," in the project root."),(0,i.kt)("h2",{id:"reporting-issues"},"Reporting issues"),(0,i.kt)("p",null,"You can report issues on our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/awaitstack/neumorphism-ui/issues"},"bug tracker"),". Please follow the issue template when opening an issue."),(0,i.kt)("h2",{id:"license"},"License"),(0,i.kt)("p",null,"By contributing to React Native Neumorphism, you agree that your contributions will be licensed under its ",(0,i.kt)("strong",{parentName:"p"},"MIT")," license."))}m.isMDXComponent=!0}}]);